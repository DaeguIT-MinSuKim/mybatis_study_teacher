<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis_study_teacher.mappers.StudentMapper">
	<sql id="selectSql">
		select stud_id, name, email, dob, phone, gender
		  from students
	</sql>

	<sql id="whereSql">
		<where>
			<if test="studId != null">
				stud_id = #{studId}
			</if>
		</where>
	</sql>
	
	<!-- select -->
	<select id="selectStudentByNo" parameterType="Student" resultType="Student">
		<include refid="selectSql"/>
		<include refid="whereSql"/>
<!-- 		select stud_id as studId, name, email, dob, phone
		  from students
		 where stud_id=#{studId} -->
	</select>
	
	<resultMap type="Student" id="stdResult">
		<id column="stud_id" property="studId"/>
		<result column="f" property="phone.countryCode"/>
		<result column="m" property="phone.stateCode"/>
		<result column="l" property="phone.number"/>
	</resultMap>
	
	<select id="selectStudentByNoWithResultMap" parameterType="Student" resultMap="stdResult">
		select stud_id, name, email, dob, phone, 
               substring(phone, 1, 3) as f, 
               substring(phone, 5, 3) as m, 
               substring(phone, 9, 4) as l
  		  from students where stud_id=#{studId}
	</select>
	
	<select id="selectStudentByAll" resultType="Student">
		<include refid="selectSql"/>
	</select>
	
	<!-- insert -->
	<insert id="insertStudent" parameterType="Student">
		insert into students(stud_id, name, email, phone, dob) 
    	values(#{studId}, #{name}, #{email}, #{phone}, #{dob})
	</insert>
	
	<!-- delete -->
	<delete id="deleteStudent" parameterType="int">
		delete from students  where stud_id = #{studId}
	</delete>
	
	<!-- update -->
	<update id="updateStudent" parameterType="Student">
	    update students 
	       set name=#{name}, email=#{email},phone=#{phone}, dob=#{dob}
	     where stud_id=#{studId}
	</update>
		
	<!-- resultmap -->
	<resultMap id="StudentResult" type="Student">
	    <id property="studId" column="stud_id"/>
	    <result property="name" column="name"/>
	    <result property="email" column="email"/>
	    <result property="phone" column="phone"/>
	    <result property="dob" column="dob"/>
	</resultMap>
	
	<select id="selectStudentByAllForResutlMap" resultMap="StudentResult">
		<include refid="selectSql"/>
	</select>
	
	<!-- hashMap -->
	<select id="selectStudentByAllForHashMap" resultType="map">
	    <include refid="selectSql"/>
	</select>
	
	<!-- 내포된 결과매핑(ResultMap)을 사용한 일대일 매핑 -->
   <resultMap id="StudentAssociation" type="Student" extends="StudentResult">
     <association property="address" resultMap="mybatis_study_teacher.mappers.AddressMapper.AddressResult"/>
   </resultMap>
    
   <select id="selectStudentByNoAssociation" parameterType="Student" resultMap="StudentAssociation">
	  select stud_id, name, email, phone, dob, a.addr_id, street, city, state, zip, country
        from students s join addresses a on s.addr_id=a.addr_id
      <include refid="whereSql"/>
   </select>
	
	<insert id="insertEnumStudent" parameterType="Student">
		insert into students(stud_id, name, email,phone, dob, gender) 
    	values(#{studId}, #{name}, #{email}, #{phone}, #{dob}, #{gender})
	</insert>
	
	<resultMap type="Student" id="StudentGenderResult"  extends="StudentResult">
    	<result property="gender" column="gender" />
	</resultMap>
	
 	<!-- 여러 개의 입력 파라미터 전달 -->
 	<sql id="where_name_email">
		<where>
	        <if test="name != null">
	            name = #{name}
	        </if>
	        <if test="email != null">
	            AND email = #{email}
	        </if>
	    </where>
 	</sql>
 	<select id="selectStudentByMap" parameterType="map" resultMap="StudentGenderResult">
		<include refid="selectSql"/>
	    <include refid="where_name_email"/>
	</select>
	<select id="selectAllStudentByMap" parameterType="map" resultMap="StudentGenderResult">
	    <include refid="selectSql"/>
	    <include refid="where_name_email"/>
	</select> 

	<!-- ResultSet 처리방식의 재정의 -->
	<select id="selectStudentForMap" parameterType="int" resultMap="StudentGenderResult">
    	<include refid="selectSql"/>
    	<include refid="whereSql"/>
	</select>
	
	<update id="updateSetStudent" parameterType="Student">
	    update students
	    <set>
	        <if test="name != null">name=#{name},</if>
	        <if test="email != null">email=#{email},</if>
	        <if test="phone != null">phone=#{phone},</if>
	        <if test="dob != null">dob=#{dob},</if>
	    </set>
	    <include refid="whereSql"/>
	</update>
	
</mapper>